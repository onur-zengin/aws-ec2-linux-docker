global:
  scrape_interval:     15s # Scrape targets every 15 seconds by default. Range vector selectors then aggregate N of these in every [R] & hand off to a function (e.g. rate) to condense the series to a single output that can be graphed. See prometheus.rules.yml.
  evaluation_interval: 45s # Evaluate rules every 45 seconds. Intended to make the results less jumpy to instantaneous (one-off) spikes, while preserving continuity by capturing the last reading in the previous series. (That is assuming the range is 1 minute)

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
    monitor: 'codelab-monitor'

rule_files:
  - 'prometheus.rules.yml'

scrape_configs:

# The following job is for the Prometheus_host itself (also hosts Grafana & Nginx);
  - job_name: 'prometheus_host'

    #scrape_interval: 5s # Optional override to the global default specified at the top.

    static_configs:

      - targets: ['localhost:9090']
        labels:
          group: 'local'
          region: 'eu-central-1'
          stage: 'prod'

# These are the remote hosts (e.g. VMs) with node_exporter (ne) installed & scraped by the Prometheus_host;
  - job_name:       'ne_instances'

    #scrape_interval: 5s # Optional override to the global default specified at the top.

    static_configs:

      - targets: ['0.0.0.0:9100'] #Â this has to be the EIP, and can't point to the localhost since node_exporter is running on the actual VM itself while the prometheus collector is inside a docker container
        labels:
          group: 'local'
          region: 'eu-central-1'
          stage: 'prod'

      - targets: ['0.0.0.0:9100']
        labels:
          group: 'remote'
          region: 'eu-central-1'
          stage: 'prod'

      - targets: ['0.0.0.0:9100']
        labels:
          group: 'remote'
          region: 'eu-west-2'
          stage: 'dev'

      - targets: ['0.0.0.0:9100']
        labels:
          group: 'remote'
          region: 'us-west-1'
          stage: 'dev'